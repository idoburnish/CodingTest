# 변수란?
하나의 값을 저장할 수 있는 메모리 공간


# 변수의 선언
1) 변수의 선언 이유
- 값을 저장할 공간을 마련하기 위해서
2) 변수의 선언 방법
- 변수타입 변수이름;


# 변수에 값 저장하기
1) 변수에 값 저장하기
ing age;
age = 25;
2) 변수의 초기화 - 변수에 처음으로 값을 저장하는 것
int x = 0, y = 0;
cf) 지역변수는 읽기 전에 꼭 초기화해야 함.


# 변수의 타입
1) 변수의 타입은 저장할 값의 타입에 의해 결정된다.
2) 저장할 값의 타입과 일치하는 타입으로 변수를 선언


# 값의 타입(기본형)
문자 : char
정수 : byte, short, int, long
실수 : float, double
논리 : boolean(true, false)


# 변수, 상수, 리터럴
- 변수 : 하나의 값을 저장하기 위한 공간(변경 o)  (score, cnt 등)
- 상수 : 한 번만 값을 저장 가능한 변수(변경 x)  (final int max = 100;)
- 리터럴 : 그 자체로 값을 의미하는 것 = 기존의 상수  (100, 200, 'A')


# 변수와 리터럴의 타입 불일치
1) 범위가 '변수 > 리터럴'인 경우 : OK
2) 범위가 '변수 < 리터럴'인 경우 : Error
3) byte, short 변수에 int 리터럴 저장가능


# 문자와 문자열
- String 클래스 이용
- String 클래스는 자주 이용해서 따로 객체 생성할 필요 x
- String s = "A" + "B"; //"AB"
- 숫자를 문자열로 변환하는 방법 : "" + 7 = "7"
- 문자열을 숫자로 변환하는 방법 : Integer.parseInf(n);

# 기본형과 참조형
- 기본형: 오직 8개(boolean, char, byte, short, int, long, float, double), 실제 값을 저장
- 참조형: 기본형을 제외한 나머지(String, System 등), 메모리 주소를 저장(4 byte or 8 byte)


# 기본형 - 종류와 크기
- 논리형: 조건식과 논리적 계산에 사용
- 문자형: 변수다 하나의 문자만 저장
- 정수형: 주로 int와 long 사용, byte는 이진 데이터를 다루는데 사용
- 실수형: float와 double 사용


# 오버플로우
- 표현 가능한 범위를 넘는 것
- 최대값 + 1 -> 최소값
- 최소값 - 1 -> 최대값


# 타입간의 변환방법
1) 문자와 숫자간의 변환
- 숫자를 문자로 변환하는 방법 : 3 + '0' = '3'
- 문자를 숫자로 변환하는 방법 : '3' - '0' = 3
2) 문자열로의 변환
- 숫자를 문자열로 변환하는 방법 : "" + 7 = "7"
- 문자열을 숫자로 변환하는 방법 : Integer.parseInf(n);
3) 문자와 문자열간의 변환
- 문자열을 문자로 변환하는 방법 : "3".charAt(0) = '3'
